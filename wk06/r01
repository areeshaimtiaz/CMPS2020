 1 #include <iostream>
  2 using namespace std;
  3 
  4 struct Food
  5 {   
  6     string name;
  7     int calories;
  8     Food * next;
  9 };
 10 
 11 int count_nodes(Food * head)
 12 {   
 13     int count = 0;
 14     Food * temp = head;
 15     
 16     while (temp != NULL)
 17     {   
 18         count++;
 19         temp = temp->next;
 20     }
 21     return count;
 22 }
 23 
 24 void shownodes(Food * head)
 25 {   
 26     Food * temp = head;
 27     
 28     while (temp != NULL)
 29     {   
 30         cout << "Item Name: " << temp->name << endl;
 31         cout << "Calories: " << temp->calories << endl << endl;
 32         temp = temp->next;
 33     }
34 }
 35 
 36 bool find(Food * head, string item)
 37 {
 38     bool found = true;
 39     int count = 0;
 40 
 41     Food * temp = head;
 42 
 43     while (temp != NULL)
 44     {
 45         if (item == temp->name)
 46         {
 47             count++;
 48         }
 49         temp = temp->next;
 50     }
 51 
 52     if (count == 0)
 53     {
 54         found = false;
 55     }
 56 
 57     return found;
 58 }
 59 
 60 int select (Food * head, string items[], int maxcal = 500)
 61 {
 62     int count = 0;
 63     Food * temp = head;
 64     while (temp != NULL)
 65     {
66         if (temp->calories <= maxcal)
 67         {
 68             items[count] = temp->name;
 69             count++;
 70         }
 71         temp = temp->next;
 72     }
 73     return count;
 74 }
 75 
 76 int main()
 77 {
 78     Food * head = NULL;
 79     Food f1 {"coconut", 500, NULL};
 80     Food f2 {"chicken", 200, NULL};
 81     Food f3 {"mango", 500, NULL};
 82     Food f4 {"burger", 1500, NULL};
 83     Food f5 {"watermelon", 350, NULL};
 84 
 85     head = &f1;
 86     f1.next = &f2;
 87     f2.next = &f3;
 88     f3.next = &f4;
 89     f4.next = &f5;
 90     f5.next = NULL;
 91 
 92     cout << "Node count: " << count_nodes(head) << endl;
 93     shownodes(head);
 94 
 95     string item;
 96     cout << "Enter item to search for: ";
 97     cin >> item;
 98 
99     if (find (head, item))
100     {
101         cout << "Found " << item << endl;
102     }
103     else
104     {
105         cout << item << " not found" << endl;
106     }
107 
108     string items[5];
109     int found;
110     found = select(head, items, 500);
111     cout << endl << found << " items with less than or equal to 500 calories" << endl;
112     return 0;
113 }
